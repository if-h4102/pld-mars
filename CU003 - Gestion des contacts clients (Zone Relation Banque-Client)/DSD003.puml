@startuml
title DSA003 - Gestion des contacts

actor Agent
participant Interface as IHM
participant "Services\nMétier\nApplicatifs" as SMA
participant Contact as C
participant Client
participant Structure
participant Contrat
participant Produit


== Lister les contacts d'un client ==

'Lister les contacts d'un client
Agent -->> IHM: consulterLaListeDesContacts
    IHM -> SMA: listerContactsClient(**idClient**)
    activate SMA
        SMA -> C: listerContactsClient(**idClient**)
        activate C
        SMA <<-- C: //Liste<Contact, idAgent>//
        deactivate C

        group Pour chaque //idAgent// de //Liste<Contact, idAgent>//
            SMA -> Structure: obtenirAgentParId(**idAgent**)
            activate Structure
            SMA <<-- Structure: //Agent//
            deactivate Structure
        end
    IHM <<-- SMA: //Liste<Contact, Agent>//
    deactivate SMA
'Fin: Lister les contacts du client

== Consulter un contact ==

'Consulter un contact
Agent -->> IHM: demandeConsultationContact
    IHM -> SMA: consulterContact(**idContact**)
    activate SMA
        SMA -> C: obtenirContactComplet(**idContact**)
        activate C
        SMA <<-- C: //Contact, idClient, idAgent,//\n//Liste<PropositionContrat, idContrat>,//\n//Liste<PropositionOffre, idOffre>//
        deactivate C

        SMA -> Client: obtenirClientParId(idClient)
        activate Client
        SMA <<-- Client: Client
        deactivate Client

        SMA -> Structure: obtenirAgentParId(idAgent)
        activate Structure
        SMA <<-- Structure: Agent
        deactivate Structure

        loop idContrat: Liste<PropositionContrat, idContrat>
            SMA -> Contrat: obtenirContratParId(idContrat)
            activate Contrat
            SMA <<-- Contrat: Contrat
            deactivate Contrat
        end

        loop idOffre: Liste<PropositionOffre, idOffre>
            SMA -> Produit: obtenirContratParId(idOffre)
            activate Produit
            SMA <<-- Produit: Offre
            deactivate Produit
        end

    IHM <<-- SMA: Contact, Client, Agent,\nListe<PropositionContrat, Contrat>\nListe<PropositionOffre, Offre>
    deactivate SMA
'Fin: Consulter un contact

== Créer un contact ==

'Créer un contact
Agent -->> IHM: saisirDonnees

opt
    Agent -->> IHM: listerContrats
        IHM -> SMA: listerContrats()
        activate SMA
            SMA -> Contrat: listerContrats()
            activate Contrat
            SMA <<-- Contrat: Liste<Contrat>
            deactivate Contrat
        IHM <<-- SMA: Liste<Contrat>
        deactivate SMA
    Agent -->> IHM: selectionnerContrat
    Agent -->> IHM: saisirAnnotations
end

opt
    Agent -->> IHM: listerOffres
        IHM -> SMA: listerOffres()
        activate SMA
            SMA -> Produit: listerOffres()
            activate Produit
            SMA <<-- Produit: Liste<Offre>
            deactivate Produit
        IHM <<-- SMA: Liste<Offre>
        deactivate SMA
    Agent -->> IHM: selectionnerOffre
    Agent -->> IHM: saisirAnnotations
end

Agent -->> IHM: creerContact
    IHM -> SMA: creerContact(Contact, idClient, idAgent, idContactOrigine,\nListe<PropositionContrat, idContrat>,\nListe<PropositionOffre, idOffre>)
    activate SMA
        SMA -> C: creerContact(Contact, idClient, idAgent, idContactOrigine,\nListe<PropositionContrat, idContrat>,\nListe<PropositionOffre, idOffre>)
        activate C
        SMA <<-- C: idContact
        deactivate C
    IHM <<-- SMA: idContact
    deactivate SMA

'Fin: Créer un contact

== Mettre à jour un Contact ==

'Mettre à jour un contact
Agent -->> IHM: editerDonneesContact

opt
    Agent -->> IHM: listerContrats
        IHM -> SMA: listerContrats()
        activate SMA
            SMA -> Contrat: listerContrats()
            activate Contrat
            SMA <<-- Contrat: Liste<Contrat>
            deactivate Contrat
        IHM <<-- SMA: Liste<Contrat>
        deactivate SMA
    Agent -->> IHM: selectionnerContrat
    Agent -->> IHM: saisirAnnotations
end

opt
    Agent -->> IHM: listerOffres
        IHM -> SMA: listerOffres()
        activate SMA
            SMA -> Produit: listerOffres()
            activate Produit
            SMA <<-- Produit: Liste<Offre>
            deactivate Produit
        IHM <<-- SMA: Liste<Offre>
        deactivate SMA
    Agent -->> IHM: selectionnerOffre
    Agent -->> IHM: saisirAnnotations
end

Agent -->> IHM: appliquerModifications
    IHM -> SMA: mettreAJourContact(Contact, idAgent, idContactOrigine,\nListe<PropositionContrat, idContrat>,\nListe<PropositionOffre, idOffre>)
    activate SMA
        SMA -> C: mettreAJourContact(Contact, idAgent,  idContactOrigine,\nListe<PropositionContrat, idContrat>,\nListe<PropositionOffre, idOffre>)
        activate C
        SMA <<-- C
        deactivate C
    IHM <<-- SMA
    deactivate SMA

'Fin: Mettre à jour un contact


@enduml
